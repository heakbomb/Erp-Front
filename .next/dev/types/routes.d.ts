// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin/dashboard" | "/admin/stores" | "/admin/stores/[id]" | "/admin/users" | "/employee/attendance" | "/employee/dashboard" | "/employee/payroll" | "/employee/search-stores" | "/forgot-password" | "/login" | "/owner/ai-insights" | "/owner/ai-insights/price-optimization" | "/owner/attendance" | "/owner/dashboard" | "/owner/employees" | "/owner/inventory" | "/owner/menu" | "/owner/payroll" | "/owner/purchases" | "/owner/sales" | "/owner/settings" | "/owner/stores" | "/owner/subscription" | "/owner/subscription/cancel" | "/owner/subscription/checkout" | "/owner/subscription/payment-method" | "/register" | "/signup"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/employee" | "/owner"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/dashboard": {}
  "/admin/stores": {}
  "/admin/stores/[id]": { "id": string; }
  "/admin/users": {}
  "/employee": {}
  "/employee/attendance": {}
  "/employee/dashboard": {}
  "/employee/payroll": {}
  "/employee/search-stores": {}
  "/forgot-password": {}
  "/login": {}
  "/owner": {}
  "/owner/ai-insights": {}
  "/owner/ai-insights/price-optimization": {}
  "/owner/attendance": {}
  "/owner/dashboard": {}
  "/owner/employees": {}
  "/owner/inventory": {}
  "/owner/menu": {}
  "/owner/payroll": {}
  "/owner/purchases": {}
  "/owner/sales": {}
  "/owner/settings": {}
  "/owner/stores": {}
  "/owner/subscription": {}
  "/owner/subscription/cancel": {}
  "/owner/subscription/checkout": {}
  "/owner/subscription/payment-method": {}
  "/register": {}
  "/signup": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/employee": never
  "/owner": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
