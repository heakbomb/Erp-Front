// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../../app/admin/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../../app/admin/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/admin/stores/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/stores/[id]">> = Specific
  const handler = {} as typeof import("../../../app/admin/stores/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/admin/stores/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/stores">> = Specific
  const handler = {} as typeof import("../../../app/admin/stores/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/admin/users/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/users">> = Specific
  const handler = {} as typeof import("../../../app/admin/users/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/employee/attendance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/employee/attendance">> = Specific
  const handler = {} as typeof import("../../../app/employee/attendance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/employee/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/employee/dashboard">> = Specific
  const handler = {} as typeof import("../../../app/employee/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/employee/payroll/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/employee/payroll">> = Specific
  const handler = {} as typeof import("../../../app/employee/payroll/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/employee/search-stores/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/employee/search-stores">> = Specific
  const handler = {} as typeof import("../../../app/employee/search-stores/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/forgot-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forgot-password">> = Specific
  const handler = {} as typeof import("../../../app/forgot-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../../app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/ai-insights/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/ai-insights">> = Specific
  const handler = {} as typeof import("../../../app/owner/ai-insights/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/ai-insights/price-optimization/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/ai-insights/price-optimization">> = Specific
  const handler = {} as typeof import("../../../app/owner/ai-insights/price-optimization/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/attendance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/attendance">> = Specific
  const handler = {} as typeof import("../../../app/owner/attendance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/dashboard">> = Specific
  const handler = {} as typeof import("../../../app/owner/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/employees/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/employees">> = Specific
  const handler = {} as typeof import("../../../app/owner/employees/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/inventory/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/inventory">> = Specific
  const handler = {} as typeof import("../../../app/owner/inventory/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/menu/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/menu">> = Specific
  const handler = {} as typeof import("../../../app/owner/menu/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/payroll/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/payroll">> = Specific
  const handler = {} as typeof import("../../../app/owner/payroll/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/purchases/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/purchases">> = Specific
  const handler = {} as typeof import("../../../app/owner/purchases/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/sales/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/sales">> = Specific
  const handler = {} as typeof import("../../../app/owner/sales/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/settings">> = Specific
  const handler = {} as typeof import("../../../app/owner/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/stores/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/stores">> = Specific
  const handler = {} as typeof import("../../../app/owner/stores/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/subscription/cancel/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/subscription/cancel">> = Specific
  const handler = {} as typeof import("../../../app/owner/subscription/cancel/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/subscription/checkout/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/subscription/checkout">> = Specific
  const handler = {} as typeof import("../../../app/owner/subscription/checkout/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/subscription/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/subscription">> = Specific
  const handler = {} as typeof import("../../../app/owner/subscription/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/subscription/payment-method/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/owner/subscription/payment-method">> = Specific
  const handler = {} as typeof import("../../../app/owner/subscription/payment-method/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register">> = Specific
  const handler = {} as typeof import("../../../app/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/signup">> = Specific
  const handler = {} as typeof import("../../../app/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../../app/admin/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../../app/admin/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/employee/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/employee">> = Specific
  const handler = {} as typeof import("../../../app/employee/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/owner/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/owner">> = Specific
  const handler = {} as typeof import("../../../app/owner/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
